logging:
    level:
#        tk.mybatis: DEBUG
        com.swind.cloud.hotel.v2: DEBUG
spring:
    application:
        name: swind-cloud-v2
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    datasource:
        name: test
        url: jdbc:mysql://${MYSQL_HOTEL_HOST:localhost}:${MYSQL_HOTEL_PORT:3309}/swind_cloud_community?useUnicode=true&characterEncoding=UTF8&useSSL=false
        username: ${MYSQL_HOTEL_USERNAME:root}
        password: ${MYSQL_HOTEL_PASSWORD:password}
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    rabbitmq:
        host: ${RABBIT_MQ_HOST:localhost}
        port: ${RABBIT_MQ_PORT:5672}
        username: guest
        password: guest
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true
    redis:
      shiro:
       host: 192.168.1.112
       port: 32769
       timeout: 2000

# sample:
#   zipkin:
#     # When enabled=false, traces log to the console. Comment to send to zipkin
#     enabled: false

mybatis:
    basepackage: com.swind.cloud.hotel.v2.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"

server:
    port: 8787
    servlet:
      session:
        timeout: 3600

eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: ${HOSTNAME_IP:127.0.0.1}
    client:
        fetch-registry: false  # false表示自己就是注册中心。我的职责就是维护服务实例，并不需要去检索服务
        register-with-eureka: false   # false表示自己不需要向注册中心注册自己
        serviceUrl:
            # docker 部署开启
            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 100000
  ConnectTimeout: 100000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000

# 配置swagger
swagger:
    enabled: true
    base-package: com.swind.cloud.hotel.v2
    title: swind-cloud-v2
    version: 1.0.0.SNAPSHOT
    description: 移动端服务
    contact:
        name: hotel

auth:
  serviceId: swind-auth
  user:
    token-header: Authorization
  client:
    id: swind-cloud-v2
    secret: 123456
    token-header: x-client-token

#redis-cache 相关
redis:
  pool:
    maxActive: 300
    maxIdle: 100
    maxWait: 1000
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}
  password:
  timeout: 2000
  # 服务或应用名
  sysName: swind-cloud-v2
  enable: true
  database: 4

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false
